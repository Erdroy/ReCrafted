// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ReCrafted.APIBuilder
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class CodeGenerator : CodeGeneratorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("// ReCrafted (c) 2016-2018 Always Too Late\r\n// WARNING: Auto-generated file, all " +
                    "changes will be lost when the API code will be regenerated!\r\n// Generated: ");
            
            #line 5 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now));
            
            #line default
            #line hidden
            this.Write(" Source: \'");
            
            #line 5 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Desc.SourceFileName));
            
            #line default
            #line hidden
            this.Write("\' Target: \'");
            
            #line 5 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Desc.TargetFileName));
            
            #line default
            #line hidden
            this.Write("\'\r\n\r\n");
            
            #line 7 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

foreach (var usingDesc in Desc.Usings)
{

            
            #line default
            #line hidden
            this.Write("using ");
            
            #line 11 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(usingDesc.Namespace));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 12 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

} 

            
            #line default
            #line hidden
            this.Write("using System;\r\nusing System.Runtime.CompilerServices;\r\n\r\n");
            
            #line 18 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

foreach (var classDesc in Desc.Classes)
{

            
            #line default
            #line hidden
            this.Write("namespace ");
            
            #line 22 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(classDesc.Namespace));
            
            #line default
            #line hidden
            this.Write(" \r\n{\r\n");
            
            #line 24 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

// ------------- CLASS -------------
var classComment = classDesc.Comment;
var classAccess = classDesc.GetAccess();
var classModifier = classDesc.GetModifier();
var className = classDesc.Name;
var classInherit = string.IsNullOrEmpty(classDesc.BaseName) ? "" : ": " + classDesc.BaseName;
var classPartial = classDesc.IsPartial ? "partial " : "";

            
            #line default
            #line hidden
            
            #line 33 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

if(!string.IsNullOrEmpty(classComment))
{

            
            #line default
            #line hidden
            this.Write("\t/// <summary>\r\n\t///\t");
            
            #line 38 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(classComment));
            
            #line default
            #line hidden
            this.Write("\r\n\t/// </summary>\r\n");
            
            #line 40 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

}

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 43 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(classAccess));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 43 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(classModifier));
            
            #line default
            #line hidden
            
            #line 43 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(classPartial));
            
            #line default
            #line hidden
            this.Write("class ");
            
            #line 43 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 43 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(classInherit));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n");
            
            #line 45 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

    if (classDesc.NoConstructor)
    {
            
            #line default
            #line hidden
            this.Write("        internal ");
            
            #line 48 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("() {}\r\n\r\n");
            
            #line 50 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
  }

// ------------- METHOD -------------
foreach (var methodDesc in classDesc.Methods)
{
	var methodAccess = methodDesc.GetAccess();
	var methodModifier = methodDesc.GetModifier();
	var methodName = methodDesc.Name;
	var methodExtern = methodDesc.IsExtern ? "extern " : "";
	var methodUnsafe = methodDesc.IsUnsafe ? "unsafe " : "";
	var methodReturn = string.IsNullOrEmpty(methodDesc.ReturnType) ? "void" : methodDesc.ReturnType;
	var methodParams = "";
    var methodParamsCall = "";
	foreach(var param in methodDesc.Parameters)
	{
	    if (methodParams.Length > 1)
	    {
	        methodParams += ", ";
	        methodParamsCall += ", ";
	    }

	    if (param.IsRef)
	    {			
	        methodParams += "ref ";
	        methodParamsCall += "ref ";
	    }
		else if (param.IsOut)
		{
		    methodParams += "out ";
		    methodParamsCall += "out ";
		}

	    methodParamsCall += param.Name;
		methodParams += param.Type + " " + param.Name;
	}

            
            #line default
            #line hidden
            
            #line 86 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

	if(!string.IsNullOrEmpty(methodDesc.Comment))
	{

            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n\t\t///\t");
            
            #line 91 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodDesc.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n");
            
            #line 93 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

	}
    if (methodDesc.IsExtern && methodDesc.Modifier != APIParameters.Static) { 
        if(!methodDesc.NoProxy) 
        {

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 99 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodAccess));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 99 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodModifier));
            
            #line default
            #line hidden
            
            #line 99 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodUnsafe));
            
            #line default
            #line hidden
            
            #line 99 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodReturn));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 99 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 99 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodParams));
            
            #line default
            #line hidden
            this.Write(")\r\n\t\t{\r\n\t\t\t");
            
            #line 101 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
if (methodReturn != "void") {
            
            #line default
            #line hidden
            this.Write("return ");
            
            #line 101 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
 }
            
            #line default
            #line hidden
            this.Write("Internal_");
            
            #line 101 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodName));
            
            #line default
            #line hidden
            this.Write("(NativePtr");
            
            #line 101 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
if(methodDesc.Parameters.Count > 0){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 101 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodParamsCall));
            
            #line default
            #line hidden
            
            #line 101 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t}\r\n        \r\n");
            
            #line 104 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

        }

            
            #line default
            #line hidden
            this.Write("\t\t[MethodImpl(MethodImplOptions.InternalCall)]\r\n\t\tinternal static extern ");
            
            #line 108 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodUnsafe));
            
            #line default
            #line hidden
            
            #line 108 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodReturn));
            
            #line default
            #line hidden
            this.Write(" Internal_");
            
            #line 108 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodName));
            
            #line default
            #line hidden
            this.Write("(IntPtr nativePtr");
            
            #line 108 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
if(methodDesc.Parameters.Count > 0){
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 108 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodParams));
            
            #line default
            #line hidden
            
            #line 108 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 109 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

    }
    else
    {
		if(methodDesc.IsExtern)
		{

            
            #line default
            #line hidden
            this.Write("\t\t[MethodImpl(MethodImplOptions.InternalCall)]\r\n");
            
            #line 117 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

		}

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 120 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodAccess));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 120 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodModifier));
            
            #line default
            #line hidden
            
            #line 120 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodExtern));
            
            #line default
            #line hidden
            
            #line 120 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodUnsafe));
            
            #line default
            #line hidden
            
            #line 120 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodReturn));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 120 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 120 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(methodParams));
            
            #line default
            #line hidden
            this.Write(")");
            
            #line 120 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
if(methodDesc.IsExtern || methodDesc.Modifier == APIParameters.Abstract){
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 121 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
}
            
            #line default
            #line hidden
            
            #line 122 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

		if(!methodDesc.IsExtern && methodDesc.Modifier != APIParameters.Abstract)
		{

            
            #line default
            #line hidden
            this.Write("\r\n\t\t{\r\n");
            
            #line 128 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

			foreach(var codeLine in methodDesc.CodeLines)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 132 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(codeLine));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 133 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

			}

            
            #line default
            #line hidden
            this.Write("\t\t}\r\n");
            
            #line 137 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

		} 
    }

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 142 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

}
// ---------- METHOD END ----------

            
            #line default
            #line hidden
            
            #line 146 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

//  ---------- PROPERTY ----------

	// define properties
    foreach (var propertyDesc in classDesc.Properties)
    {
        if (!string.IsNullOrEmpty(propertyDesc.Comment))
	    {

            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n\t\t///\t");
            
            #line 156 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// </summary>\r\n");
            
            #line 158 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

	    }
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 160 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.GetAccess()));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 160 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.GetModifier()));
            
            #line default
            #line hidden
            
            #line 160 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 160 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Name));
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t{\r\n\t\t\tget\r\n\t\t\t{\r\n");
            
            #line 164 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

            if (propertyDesc.ByRef)
            {

            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 168 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Type));
            
            #line default
            #line hidden
            this.Write(" result;\r\n\t\t\t\tInternal_");
            
            #line 169 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Name));
            
            #line default
            #line hidden
            this.Write("_Get(");
            
            #line 169 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
if (propertyDesc.Modifier != APIParameters.Static) { 
            
            #line default
            #line hidden
            this.Write("NativePtr, ");
            
            #line 169 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("out result);\r\n\t\t\t\treturn result;\r\n");
            
            #line 171 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

            }
            else
            {

            
            #line default
            #line hidden
            this.Write("\t\t\t\treturn Internal_");
            
            #line 176 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Name));
            
            #line default
            #line hidden
            this.Write("_Get(");
            
            #line 176 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
if (propertyDesc.Modifier != APIParameters.Static) { 
            
            #line default
            #line hidden
            this.Write("NativePtr");
            
            #line 176 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 177 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

            }

            
            #line default
            #line hidden
            this.Write("\t\t\t}\r\n");
            
            #line 181 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

			if(!propertyDesc.GetOnly)
			{

            
            #line default
            #line hidden
            this.Write("\t\t\tset\r\n\t\t\t{\r\n");
            
            #line 187 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

				if (propertyDesc.ByRef)
				{

            
            #line default
            #line hidden
            this.Write("\t\t\t\tInternal_");
            
            #line 191 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Name));
            
            #line default
            #line hidden
            this.Write("_Set(");
            
            #line 191 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
if (propertyDesc.Modifier != APIParameters.Static) { 
            
            #line default
            #line hidden
            this.Write("NativePtr, ");
            
            #line 191 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("ref value);\r\n");
            
            #line 192 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

				}
				else
				{

            
            #line default
            #line hidden
            this.Write("\t\t\t\tInternal_");
            
            #line 197 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Name));
            
            #line default
            #line hidden
            this.Write("_Set(");
            
            #line 197 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
if (propertyDesc.Modifier != APIParameters.Static) { 
            
            #line default
            #line hidden
            this.Write("NativePtr, ");
            
            #line 197 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("value);\r\n");
            
            #line 198 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

				}

            
            #line default
            #line hidden
            this.Write("\t\t\t}\r\n");
            
            #line 202 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

			}

            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\r\n");
            
            #line 207 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

    }

    // define get/set methods
    foreach (var propertyDesc in classDesc.Properties)
    {
        var getReturn = propertyDesc.ByRef ? "void" : propertyDesc.Type;
        var getParams = "";
        var setParams = "";

        if (propertyDesc.Modifier != APIParameters.Static)
        {
            getParams = "IntPtr nativePtr";

            if (propertyDesc.ByRef)
                getParams += ", ";

            setParams = "IntPtr nativePtr, ";
        }

        if (propertyDesc.ByRef)
        {
            setParams += "ref ";
            getParams += "out " + propertyDesc.Type + " result";
        }

        setParams += propertyDesc.Type + " value";

        if (propertyDesc.GetOnly)
        {

            
            #line default
            #line hidden
            this.Write("\t\t[MethodImpl(MethodImplOptions.InternalCall)]\r\n\t\tinternal static extern ");
            
            #line 239 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(getReturn));
            
            #line default
            #line hidden
            this.Write(" Internal_");
            
            #line 239 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Name));
            
            #line default
            #line hidden
            this.Write("_Get(");
            
            #line 239 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(getParams));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 240 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("\t\t[MethodImpl(MethodImplOptions.InternalCall)]\r\n\t\tinternal static extern void Int" +
                    "ernal_");
            
            #line 246 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Name));
            
            #line default
            #line hidden
            this.Write("_Set(");
            
            #line 246 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(setParams));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t[MethodImpl(MethodImplOptions.InternalCall)]\r\n\t\tinternal static extern ");
            
            #line 248 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(getReturn));
            
            #line default
            #line hidden
            this.Write(" Internal_");
            
            #line 248 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(propertyDesc.Name));
            
            #line default
            #line hidden
            this.Write("_Get(");
            
            #line 248 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(getParams));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 249 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

        }
    }
//  ---------- PROPERTY END ----------

            
            #line default
            #line hidden
            this.Write("\t}\r\n");
            
            #line 255 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"
 // ---------- CLASS END ---------- 
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 257 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

}

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\ReCrafted\src\tools\ReCrafted.APIBuilder\CodeGenerator.tt"

private global::ReCrafted.APIBuilder.Tags.APITagFile _DescField;

/// <summary>
/// Access the Desc parameter of the template.
/// </summary>
private global::ReCrafted.APIBuilder.Tags.APITagFile Desc
{
    get
    {
        return this._DescField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool DescValueAcquired = false;
if (this.Session.ContainsKey("Desc"))
{
    this._DescField = ((global::ReCrafted.APIBuilder.Tags.APITagFile)(this.Session["Desc"]));
    DescValueAcquired = true;
}
if ((DescValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("Desc");
    if ((data != null))
    {
        this._DescField = ((global::ReCrafted.APIBuilder.Tags.APITagFile)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class CodeGeneratorBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
