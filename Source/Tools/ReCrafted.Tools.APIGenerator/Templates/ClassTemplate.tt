<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="ReCrafted.Tools.APIGenerator" #>
<#@ import namespace="ReCrafted.Tools.APIGenerator.Description" #>
<#@ parameter type="ReCrafted.Tools.APIGenerator.Description.ClassDescription" name="Class" #>
<#@ parameter type="System.Collections.Generic.List<ReCrafted.Tools.APIGenerator.Description.FunctionDescription>" name="Functions" #>
// ReCrafted (c) 2016-2019 Damian 'Erdroy' Korczowski. All rights reserved.
// WARNING: Auto-generated file. All changes will be lost when the API code will be regenerated!

using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;

<#
#>
namespace <#=Class.Namespace#> 
{
    <#=Class.GetModifiers()#> class <#=Class.Name#> : <#=Class.Inherits#>
    {
<#

//      \/ ---- GENERATE FUNCTIONS ---- \/
foreach(var function in Functions)
{
#>

        <#=function.GetModifiers()#> <#=TypeTranslation.ToCSharp(function.ReturnType)#> <#=function.Name#>(<#=function.GetCSharpParameters()#>)
        {
            Internal<#=function.Name#>(<#=function.GetCSharpParametersRedirect()#>);
        }
<#
}
//      /\ ---- GENERATE FUNCTIONS ---- /\

//      \/ ---- GENERATE EXTERN FUNCTIONS ---- \/
foreach(var function in Functions)
{
#>

        [MethodImpl(MethodImplOptions.InternalCall)]
        private static extern <#=TypeTranslation.ToCSharp(function.ReturnType)#> Internal<#=function.Name#>(<#=function.GetCSharpParameters(true)#>);
<#
}
//      /\ ---- GENERATE EXTERN FUNCTIONS ---- /\
#>
    }
}