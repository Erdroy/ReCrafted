// GLSL Fragment Shader "PSMain"
// Generated by XShaderCompiler
// 13/01/2017 17:16:14

#version 330 core

in vec2 xsc_vary_TEXCOORD;

out vec4 SV_Target0;

layout(std140) uniform Data
{
    vec4 LightColor;
    vec4 LightDir;
};

uniform sampler2D Albedo;
uniform sampler2D Normals;
uniform sampler2D AmbientOcculusion;
uniform sampler2D ShadowOcculusion;

void main()
{
	vec2 uv = xsc_vary_TEXCOORD;
	uv.y = -uv.y;

    vec4 albedo = texture(Albedo, uv);
    vec4 normal = texture(Normals, uv) * 2.0f - 1.0f;
	float shadow = 0.75f;// texture(ShadowOcculusion, uv).r;
    float ambient = texture(AmbientOcculusion, uv).r;
	
    vec3 lightDir = normalize(LightDir.xyz);
    float nDotL = dot(normal.xyz, lightDir.xyz);
    nDotL = clamp(nDotL, 0.0f, 1.0f);
    ambient = 1.0f - ambient;
    vec3 lightColor = LightColor.xyz * LightColor.w;
    vec3 lighting = (lightColor * nDotL) * shadow + vec3(0.6f, 0.6f, 0.6f);
	SV_Target0 = vec4(albedo.rgb * lighting * ambient, 1.0f);
}

